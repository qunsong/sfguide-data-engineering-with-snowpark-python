/*-----------------------------------------------------------------------------
Hands-On Lab: Data Engineering with Snowpark
Script:       01_setup_snowflake.sql
Author:       Jeremiah Hansen
Last Updated: 1/1/2023
-----------------------------------------------------------------------------*/


-- ----------------------------------------------------------------------------
-- Step #1: Accept Anaconda Terms & Conditions
-- ----------------------------------------------------------------------------

-- See Getting Started section in Third-Party Packages (https://docs.snowflake.com/en/developer-guide/udf/python/udf-python-packages.html#getting-started)


-- ----------------------------------------------------------------------------
-- Step #2: Create the account level objects
-- ----------------------------------------------------------------------------
USE ROLE ACCOUNTADMIN;

select current_role();

-- Roles
SET MY_USER = CURRENT_USER();
CREATE OR REPLACE ROLE HOL_ROLE;
GRANT ROLE HOL_ROLE TO ROLE SYSADMIN;
GRANT ROLE HOL_ROLE TO USER IDENTIFIER($MY_USER);

GRANT EXECUTE TASK ON ACCOUNT TO ROLE HOL_ROLE;
GRANT MONITOR EXECUTION ON ACCOUNT TO ROLE HOL_ROLE;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE HOL_ROLE;

-- Databases
CREATE OR REPLACE DATABASE HOL_DB;
GRANT OWNERSHIP ON DATABASE HOL_DB TO ROLE HOL_ROLE;

-- Warehouses
CREATE OR REPLACE WAREHOUSE HOL_WH WAREHOUSE_SIZE = XSMALL, AUTO_SUSPEND = 300, AUTO_RESUME= TRUE;
GRANT OWNERSHIP ON WAREHOUSE HOL_WH TO ROLE HOL_ROLE;


-- ----------------------------------------------------------------------------
-- Step #3: Create the database level objects
-- ----------------------------------------------------------------------------
USE ROLE HOL_ROLE;
USE WAREHOUSE HOL_WH;
USE DATABASE HOL_DB;

-- Schemas
CREATE OR REPLACE SCHEMA EXTERNAL;
CREATE OR REPLACE SCHEMA RAW_POS;
CREATE OR REPLACE SCHEMA RAW_CUSTOMER;
CREATE OR REPLACE SCHEMA HARMONIZED;
CREATE OR REPLACE SCHEMA ANALYTICS;

-- External Frostbyte objects
USE SCHEMA EXTERNAL;
CREATE OR REPLACE FILE FORMAT PARQUET_FORMAT
    TYPE = PARQUET
    COMPRESSION = SNAPPY
;
CREATE OR REPLACE STAGE FROSTBYTE_RAW_STAGE
    URL = 's3://sfquickstarts/data-engineering-with-snowpark-python/'
;

-- ANALYTICS objects
USE SCHEMA ANALYTICS;
-- This will be added in step 5
--CREATE OR REPLACE FUNCTION ANALYTICS.FAHRENHEIT_TO_CELSIUS_UDF(TEMP_F NUMBER(35,4))
--RETURNS NUMBER(35,4)
--AS
--$$
--    (temp_f - 32) * (5/9)
--$$;

CREATE OR REPLACE FUNCTION ANALYTICS.INCH_TO_MILLIMETER_UDF(INCH NUMBER(35,4))
RETURNS NUMBER(35,4)
    AS
$$
    inch * 25.4
$$;


CREATE OR REPLACE FUNCTION harmonized.INCH_TO_MILLIMETER_UDF(INCH NUMBER(35,4))
RETURNS NUMBER(35,4)
    AS
$$
    inch * 25.4
$$;

create or replace view HOL_DB.HARMONIZED.POS_FLATTENED_V(
	ORDER_ID,
	TRUCK_ID,
	ORDER_TS,
	ORDER_TS_DATE,
	ORDER_DETAIL_ID,
	LINE_NUMBER,
	TRUCK_BRAND_NAME,
	MENU_TYPE,
	PRIMARY_CITY,
	REGION,
	COUNTRY,
	FRANCHISE_FLAG,
	FRANCHISE_ID,
	FRANCHISEE_FIRST_NAME,
	FRANCHISEE_LAST_NAME,
	LOCATION_ID,
	MENU_ITEM_ID,
	MENU_ITEM_NAME,
	QUANTITY,
	UNIT_PRICE,
	PRICE,
	ORDER_AMOUNT,
	ORDER_TAX_AMOUNT,
	ORDER_DISCOUNT_AMOUNT,
	ORDER_TOTAL
) as  SELECT  *  FROM ( SELECT "ORDER_ID", "TRUCK_ID", "ORDER_TS", "ORDER_TS_DATE", "ORDER_DETAIL_ID", "LINE_NUMBER", "TRUCK_BRAND_NAME", "MENU_TYPE", "PRIMARY_CITY", "REGION", "COUNTRY", "FRANCHISE_FLAG", "FRANCHISE_ID", "FRANCHISEE_FIRST_NAME", "FRANCHISEE_LAST_NAME", "LOCATION_ID", "MENU_ITEM_ID", "MENU_ITEM_NAME", "QUANTITY", "UNIT_PRICE", "PRICE", "ORDER_AMOUNT", "ORDER_TAX_AMOUNT", "ORDER_DISCOUNT_AMOUNT", "ORDER_TOTAL" FROM ( SELECT  *  FROM (( SELECT "ORDER_DETAIL_ID" AS "ORDER_DETAIL_ID", "LINE_NUMBER" AS "LINE_NUMBER", "MENU_ITEM_ID" AS "MENU_ITEM_ID", "QUANTITY" AS "QUANTITY", "UNIT_PRICE" AS "UNIT_PRICE", "PRICE" AS "PRICE", "ORDER_ID" AS "ORDER_ID", "ORDER_ID_OH" AS "ORDER_ID_OH", "TRUCK_ID" AS "TRUCK_ID", "ORDER_TS" AS "ORDER_TS", "ORDER_TS_DATE" AS "ORDER_TS_DATE", "ORDER_AMOUNT" AS "ORDER_AMOUNT", "ORDER_TAX_AMOUNT" AS "ORDER_TAX_AMOUNT", "ORDER_DISCOUNT_AMOUNT" AS "ORDER_DISCOUNT_AMOUNT", "LOCATION_ID" AS "LOCATION_ID", "ORDER_TOTAL" AS "ORDER_TOTAL", "TRUCK_ID_T" AS "TRUCK_ID_T", "PRIMARY_CITY" AS "PRIMARY_CITY", "REGION" AS "REGION", "COUNTRY" AS "COUNTRY", "FRANCHISE_FLAG" AS "FRANCHISE_FLAG", "FRANCHISE_ID" AS "FRANCHISE_ID", "FRANCHISE_ID_F" AS "FRANCHISE_ID_F", "FRANCHISEE_FIRST_NAME" AS "FRANCHISEE_FIRST_NAME", "FRANCHISEE_LAST_NAME" AS "FRANCHISEE_LAST_NAME", "LOCATION_ID_L" AS "LOCATION_ID_L" FROM ( SELECT  *  FROM (( SELECT "ORDER_DETAIL_ID" AS "ORDER_DETAIL_ID", "LINE_NUMBER" AS "LINE_NUMBER", "MENU_ITEM_ID" AS "MENU_ITEM_ID", "QUANTITY" AS "QUANTITY", "UNIT_PRICE" AS "UNIT_PRICE", "PRICE" AS "PRICE", "ORDER_ID" AS "ORDER_ID" FROM RAW_POS.ORDER_DETAIL) AS SNOWPARK_LEFT INNER JOIN ( SELECT "ORDER_ID" AS "ORDER_ID_OH", "TRUCK_ID" AS "TRUCK_ID", "ORDER_TS" AS "ORDER_TS", "ORDER_TS_DATE" AS "ORDER_TS_DATE", "ORDER_AMOUNT" AS "ORDER_AMOUNT", "ORDER_TAX_AMOUNT" AS "ORDER_TAX_AMOUNT", "ORDER_DISCOUNT_AMOUNT" AS "ORDER_DISCOUNT_AMOUNT", "LOCATION_ID" AS "LOCATION_ID", "ORDER_TOTAL" AS "ORDER_TOTAL", "TRUCK_ID_T" AS "TRUCK_ID_T", "PRIMARY_CITY" AS "PRIMARY_CITY", "REGION" AS "REGION", "COUNTRY" AS "COUNTRY", "FRANCHISE_FLAG" AS "FRANCHISE_FLAG", "FRANCHISE_ID" AS "FRANCHISE_ID", "FRANCHISE_ID_F" AS "FRANCHISE_ID_F", "FRANCHISEE_FIRST_NAME" AS "FRANCHISEE_FIRST_NAME", "FRANCHISEE_LAST_NAME" AS "FRANCHISEE_LAST_NAME", "LOCATION_ID_L" AS "LOCATION_ID_L" FROM ( SELECT  *  FROM (( SELECT "ORDER_ID" AS "ORDER_ID", "TRUCK_ID" AS "TRUCK_ID", "ORDER_TS" AS "ORDER_TS", "ORDER_TS_DATE" AS "ORDER_TS_DATE", "ORDER_AMOUNT" AS "ORDER_AMOUNT", "ORDER_TAX_AMOUNT" AS "ORDER_TAX_AMOUNT", "ORDER_DISCOUNT_AMOUNT" AS "ORDER_DISCOUNT_AMOUNT", "LOCATION_ID" AS "LOCATION_ID", "ORDER_TOTAL" AS "ORDER_TOTAL", "TRUCK_ID_T" AS "TRUCK_ID_T", "PRIMARY_CITY" AS "PRIMARY_CITY", "REGION" AS "REGION", "COUNTRY" AS "COUNTRY", "FRANCHISE_FLAG" AS "FRANCHISE_FLAG", "FRANCHISE_ID" AS "FRANCHISE_ID", "FRANCHISE_ID_F" AS "FRANCHISE_ID_F", "FRANCHISEE_FIRST_NAME" AS "FRANCHISEE_FIRST_NAME", "FRANCHISEE_LAST_NAME" AS "FRANCHISEE_LAST_NAME" FROM ( SELECT  *  FROM (( SELECT "ORDER_ID" AS "ORDER_ID", "TRUCK_ID" AS "TRUCK_ID", "ORDER_TS" AS "ORDER_TS", "ORDER_TS_DATE" AS "ORDER_TS_DATE", "ORDER_AMOUNT" AS "ORDER_AMOUNT", "ORDER_TAX_AMOUNT" AS "ORDER_TAX_AMOUNT", "ORDER_DISCOUNT_AMOUNT" AS "ORDER_DISCOUNT_AMOUNT", "LOCATION_ID" AS "LOCATION_ID", "ORDER_TOTAL" AS "ORDER_TOTAL" FROM ( SELECT "ORDER_ID", "TRUCK_ID", "ORDER_TS", to_date("ORDER_TS") AS "ORDER_TS_DATE", "ORDER_AMOUNT", "ORDER_TAX_AMOUNT", "ORDER_DISCOUNT_AMOUNT", "LOCATION_ID", "ORDER_TOTAL" FROM RAW_POS.ORDER_HEADER)) AS SNOWPARK_LEFT INNER JOIN ( SELECT "TRUCK_ID" AS "TRUCK_ID_T", "PRIMARY_CITY" AS "PRIMARY_CITY", "REGION" AS "REGION", "COUNTRY" AS "COUNTRY", "FRANCHISE_FLAG" AS "FRANCHISE_FLAG", "FRANCHISE_ID" AS "FRANCHISE_ID", "FRANCHISE_ID_F" AS "FRANCHISE_ID_F", "FRANCHISEE_FIRST_NAME" AS "FRANCHISEE_FIRST_NAME", "FRANCHISEE_LAST_NAME" AS "FRANCHISEE_LAST_NAME" FROM ( SELECT  *  FROM (( SELECT "TRUCK_ID" AS "TRUCK_ID", "PRIMARY_CITY" AS "PRIMARY_CITY", "REGION" AS "REGION", "COUNTRY" AS "COUNTRY", "FRANCHISE_FLAG" AS "FRANCHISE_FLAG", "FRANCHISE_ID" AS "FRANCHISE_ID" FROM RAW_POS.TRUCK) AS SNOWPARK_LEFT INNER JOIN ( SELECT "FRANCHISE_ID" AS "FRANCHISE_ID_F", "FRANCHISEE_FIRST_NAME" AS "FRANCHISEE_FIRST_NAME", "FRANCHISEE_LAST_NAME" AS "FRANCHISEE_LAST_NAME" FROM ( SELECT "FRANCHISE_ID", "FIRST_NAME" AS "FRANCHISEE_FIRST_NAME", "LAST_NAME" AS "FRANCHISEE_LAST_NAME" FROM RAW_POS.FRANCHISE)) AS SNOWPARK_RIGHT ON ("FRANCHISE_ID" = "FRANCHISE_ID_F")))) AS SNOWPARK_RIGHT ON ("TRUCK_ID" = "TRUCK_ID_T")))) AS SNOWPARK_LEFT INNER JOIN ( SELECT "LOCATION_ID" AS "LOCATION_ID_L" FROM RAW_POS.LOCATION) AS SNOWPARK_RIGHT ON ("LOCATION_ID" = "LOCATION_ID_L")))) AS SNOWPARK_RIGHT ON ("ORDER_ID" = "ORDER_ID_OH")))) AS SNOWPARK_LEFT INNER JOIN ( SELECT "MENU_ITEM_ID" AS "MENU_ITEM_ID_M", "TRUCK_BRAND_NAME" AS "TRUCK_BRAND_NAME", "MENU_TYPE" AS "MENU_TYPE", "MENU_ITEM_NAME" AS "MENU_ITEM_NAME" FROM RAW_POS.MENU) AS SNOWPARK_RIGHT ON ("MENU_ITEM_ID" = "MENU_ITEM_ID_M"))));